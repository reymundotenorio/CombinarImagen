/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author reymundo
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCuerpo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ckCabeza = new javax.swing.JCheckBox();
        ckCuello = new javax.swing.JCheckBox();
        ckHombros = new javax.swing.JCheckBox();
        ckBrazos = new javax.swing.JCheckBox();
        ckCodos = new javax.swing.JCheckBox();
        ckManos = new javax.swing.JCheckBox();
        ckPecho = new javax.swing.JCheckBox();
        ckEstomago = new javax.swing.JCheckBox();
        ckEspalda = new javax.swing.JCheckBox();
        ckPiernas = new javax.swing.JCheckBox();
        ckRodillas = new javax.swing.JCheckBox();
        ckPies = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuerpo Humano"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        lblCuerpo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lblCuerpo, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel2.setLayout(new java.awt.GridLayout(7, 2, 5, 2));

        ckCabeza.setText("Cabeza");
        ckCabeza.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckCabezaItemStateChanged(evt);
            }
        });
        jPanel2.add(ckCabeza);

        ckCuello.setText("Cuello");
        ckCuello.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckCuelloItemStateChanged(evt);
            }
        });
        jPanel2.add(ckCuello);

        ckHombros.setText("Hombros");
        ckHombros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckHombrosItemStateChanged(evt);
            }
        });
        jPanel2.add(ckHombros);

        ckBrazos.setText("Brazos");
        ckBrazos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckBrazosItemStateChanged(evt);
            }
        });
        jPanel2.add(ckBrazos);

        ckCodos.setText("Codos");
        ckCodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckCodosItemStateChanged(evt);
            }
        });
        jPanel2.add(ckCodos);

        ckManos.setText("Manos");
        ckManos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckManosItemStateChanged(evt);
            }
        });
        jPanel2.add(ckManos);

        ckPecho.setText("Pecho");
        ckPecho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckPechoItemStateChanged(evt);
            }
        });
        jPanel2.add(ckPecho);

        ckEstomago.setText("Estomago");
        ckEstomago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckEstomagoItemStateChanged(evt);
            }
        });
        jPanel2.add(ckEstomago);

        ckEspalda.setText("Espalda");
        ckEspalda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckEspaldaItemStateChanged(evt);
            }
        });
        jPanel2.add(ckEspalda);

        ckPiernas.setText("Piernas");
        ckPiernas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckPiernasItemStateChanged(evt);
            }
        });
        jPanel2.add(ckPiernas);

        ckRodillas.setText("Rodillas");
        ckRodillas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckRodillasItemStateChanged(evt);
            }
        });
        jPanel2.add(ckRodillas);

        ckPies.setText("Pies");
        ckPies.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckPiesItemStateChanged(evt);
            }
        });
        jPanel2.add(ckPies);

        getContentPane().add(jPanel2, java.awt.BorderLayout.EAST);

        setSize(new java.awt.Dimension(598, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            Iniciar();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void ckCabezaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckCabezaItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckCabezaItemStateChanged

    private void ckCuelloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckCuelloItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckCuelloItemStateChanged

    private void ckHombrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckHombrosItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckHombrosItemStateChanged

    private void ckBrazosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckBrazosItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckBrazosItemStateChanged

    private void ckCodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckCodosItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckCodosItemStateChanged

    private void ckManosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckManosItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckManosItemStateChanged

    private void ckPechoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckPechoItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckPechoItemStateChanged

    private void ckEstomagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckEstomagoItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckEstomagoItemStateChanged

    private void ckEspaldaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckEspaldaItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckEspaldaItemStateChanged

    private void ckPiernasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckPiernasItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckPiernasItemStateChanged

    private void ckRodillasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckRodillasItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckRodillasItemStateChanged

    private void ckPiesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckPiesItemStateChanged
        try {
            Magia();        // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ckPiesItemStateChanged

    public void Iniciar() throws IOException {
        BufferedImage largeI = null;

        largeI = ImageIO.read(new File("img/Body.gif"));

        BufferedImage combinedI = new BufferedImage(largeI.getWidth(), largeI.getHeight(), BufferedImage.TYPE_INT_ARGB);

        // paint both images, preserving the alpha channels
        Graphics g = combinedI.getGraphics();
        g.drawImage(largeI, 0, 0, null);

        ImageIO.write(combinedI, "PNG", new File("img/Body.png"));

        ImageIcon icon1 = new ImageIcon(combinedI);
        lblCuerpo.setIcon(icon1);
    }

    public void Magia() throws IOException {

        BufferedImage Body = null;

        Body = ImageIO.read(new File("img/Body.gif"));

        BufferedImage Cabeza = null, Cuello = null, Hombros = null, Brazos = null,
                Codos = null, Manos = null, Pecho = null, Estomago = null, Espalda = null,
                Piernas = null, Rodillas = null, Pies = null;
        //   Todo = null

        BufferedImage combined = new BufferedImage(Body.getWidth(), Body.getHeight(), BufferedImage.TYPE_INT_ARGB);

        // paint both images, preserving the alpha channels
        Graphics g = combined.getGraphics();
//
//         if (ckTodo.isSelected()) {
//            Todo = ImageIO.read(new File("Todo.gif"));
//            g.drawImage(Todo, 0, 0, null);
//        }
//        
        if (ckCabeza.isSelected()) {
            Cabeza = ImageIO.read(new File("img/Cabeza.gif"));
            g.drawImage(Cabeza, 0, 0, null);
        }
        if (ckCuello.isSelected()) {
            Cuello = ImageIO.read(new File("img/Cuello.gif"));
            g.drawImage(Cuello, 0, 0, null);
        }
        if (ckHombros.isSelected()) {
            Hombros = ImageIO.read(new File("img/Hombros.gif"));
            g.drawImage(Hombros, 0, 0, null);
        }
        if (ckBrazos.isSelected()) {
            Brazos = ImageIO.read(new File("img/Brazos.gif"));
            g.drawImage(Brazos, 0, 0, null);
        }
        if (ckCodos.isSelected()) {
            Codos = ImageIO.read(new File("img/Codos.gif"));
            g.drawImage(Codos, 0, 0, null);
        }
        if (ckManos.isSelected()) {
            Manos = ImageIO.read(new File("img/Manos.gif"));
            g.drawImage(Manos, 0, 0, null);
        }
        if (ckPecho.isSelected()) {
            Pecho = ImageIO.read(new File("img/Pecho.gif"));
            g.drawImage(Pecho, 0, 0, null);
        }
        if (ckEstomago.isSelected()) {
            Estomago = ImageIO.read(new File("img/Estomago.gif"));
            g.drawImage(Estomago, 0, 0, null);
        }
        if (ckEspalda.isSelected()) {
            Espalda = ImageIO.read(new File("img/Espalda.gif"));
            g.drawImage(Espalda, 0, 0, null);
        }
        if (ckPiernas.isSelected()) {
            Piernas = ImageIO.read(new File("img/Piernas.gif"));
            g.drawImage(Piernas, 0, 0, null);
        }
        if (ckRodillas.isSelected()) {
            Rodillas = ImageIO.read(new File("img/Rodillas.gif"));
            g.drawImage(Rodillas, 0, 0, null);
        }
        if (ckPies.isSelected()) {
            Pies = ImageIO.read(new File("img/Pies.gif"));
            g.drawImage(Pies, 0, 0, null);
        }

        g.drawImage(Body, 0, 0, null);

        ImageIO.write(combined, "PNG", new File("img/AllinOne.png"));

        ImageIcon icon1 = new ImageIcon(combined);
        lblCuerpo.setIcon(icon1);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckBrazos;
    private javax.swing.JCheckBox ckCabeza;
    private javax.swing.JCheckBox ckCodos;
    private javax.swing.JCheckBox ckCuello;
    private javax.swing.JCheckBox ckEspalda;
    private javax.swing.JCheckBox ckEstomago;
    private javax.swing.JCheckBox ckHombros;
    private javax.swing.JCheckBox ckManos;
    private javax.swing.JCheckBox ckPecho;
    private javax.swing.JCheckBox ckPiernas;
    private javax.swing.JCheckBox ckPies;
    private javax.swing.JCheckBox ckRodillas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCuerpo;
    // End of variables declaration//GEN-END:variables
}
